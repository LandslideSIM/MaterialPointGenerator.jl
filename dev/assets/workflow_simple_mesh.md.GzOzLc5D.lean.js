import{_ as l,C as h,c as p,o as k,j as i,az as a,a as t,G as e}from"./chunks/framework.mzTpsqEJ.js";const r="/MaterialPointGenerator.jl/dev/assets/image1.Dqq0zvlK.png",d="/MaterialPointGenerator.jl/dev/assets/image2.DWF53-LX.png",A=JSON.parse('{"title":"Simple Mesh","description":"","frontmatter":{},"headers":[],"relativePath":"workflow/simple_mesh.md","filePath":"workflow/simple_mesh.md","lastUpdated":null}'),o={name:"workflow/simple_mesh.md"},g={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""};function u(b,s,T,_,B,m){const n=h("Badge");return k(),p("div",null,[s[18]||(s[18]=i("h1",{id:"Simple-Mesh",tabindex:"-1"},[t("Simple Mesh "),i("a",{class:"header-anchor",href:"#Simple-Mesh","aria-label":'Permalink to "Simple Mesh {#Simple-Mesh}"'},"​")],-1)),s[19]||(s[19]=i("p",null,"Here, we consider generating rectangular domain nodes (2D) and cuboidal domain nodes (3D) by controlling the starting range and step size in each direction.",-1)),s[20]||(s[20]=i("h2",{id:"_2d",tabindex:"-1"},[t("2D "),i("a",{class:"header-anchor",href:"#_2d","aria-label":'Permalink to "2D"'},"​")],-1)),s[21]||(s[21]=i("p",null,"Consider a rectangular area where the range in the x-direction is from 0 to 10 and in the y-direction from 0 to 6. The step size in the x-direction is 1, and in the y-direction, it is 2. Therefore, we can do:",-1)),i("details",g,[i("summary",null,[s[0]||(s[0]=i("a",{id:"MaterialPointGenerator.meshbuilder-Union{Tuple{T}, Tuple{T, T}} where T<:AbstractRange",href:"#MaterialPointGenerator.meshbuilder-Union{Tuple{T}, Tuple{T, T}} where T<:AbstractRange"},[i("span",{class:"jlbinding"},"MaterialPointGenerator.meshbuilder")],-1)),s[1]||(s[1]=t()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[2]||(s[2]=a("",4))]),s[22]||(s[22]=a("",5)),i("details",y,[i("summary",null,[s[3]||(s[3]=i("a",{id:"MaterialPointGenerator.meshbuilder-Union{Tuple{T}, Tuple{T, T, T}} where T<:AbstractRange",href:"#MaterialPointGenerator.meshbuilder-Union{Tuple{T}, Tuple{T, T, T}} where T<:AbstractRange"},[i("span",{class:"jlbinding"},"MaterialPointGenerator.meshbuilder")],-1)),s[4]||(s[4]=t()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[5]||(s[5]=a("",4))]),s[23]||(s[23]=a("",4)),i("details",F,[i("summary",null,[s[6]||(s[6]=i("a",{id:"MaterialPointGenerator.savexy-Union{Tuple{T}, Tuple{P}, Tuple{P, T}} where {P<:String, T<:(AbstractMatrix)}",href:"#MaterialPointGenerator.savexy-Union{Tuple{T}, Tuple{P}, Tuple{P, T}} where {P<:String, T<:(AbstractMatrix)}"},[i("span",{class:"jlbinding"},"MaterialPointGenerator.savexy")],-1)),s[7]||(s[7]=t()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[8]||(s[8]=a("",4))]),i("details",C,[i("summary",null,[s[9]||(s[9]=i("a",{id:"MaterialPointGenerator.savexyz-Union{Tuple{T}, Tuple{P}, Tuple{P, T}} where {P<:String, T<:(AbstractMatrix)}",href:"#MaterialPointGenerator.savexyz-Union{Tuple{T}, Tuple{P}, Tuple{P, T}} where {P<:String, T<:(AbstractMatrix)}"},[i("span",{class:"jlbinding"},"MaterialPointGenerator.savexyz")],-1)),s[10]||(s[10]=t()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[11]||(s[11]=a("",4))]),i("details",E,[i("summary",null,[s[12]||(s[12]=i("a",{id:"MaterialPointGenerator.readxy-Tuple{P} where P<:String",href:"#MaterialPointGenerator.readxy-Tuple{P} where P<:String"},[i("span",{class:"jlbinding"},"MaterialPointGenerator.readxy")],-1)),s[13]||(s[13]=t()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[14]||(s[14]=a("",4))]),i("details",c,[i("summary",null,[s[15]||(s[15]=i("a",{id:"MaterialPointGenerator.readxyz-Tuple{P} where P<:String",href:"#MaterialPointGenerator.readxyz-Tuple{P} where P<:String"},[i("span",{class:"jlbinding"},"MaterialPointGenerator.readxyz")],-1)),s[16]||(s[16]=t()),e(n,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[17]||(s[17]=a("",4))]),s[24]||(s[24]=a("",1))])}const D=l(o,[["render",u]]);export{A as __pageData,D as default};
