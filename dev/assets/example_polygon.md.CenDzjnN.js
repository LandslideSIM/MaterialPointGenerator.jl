import{_ as i,c as a,o as t,aA as n}from"./chunks/framework.BJV3ZaIF.js";const e="/MaterialPointGenerator.jl/dev/assets/image1.BDDqPDE4.png",l="/MaterialPointGenerator.jl/dev/assets/image2.DyKxVdSu.png",c=JSON.parse('{"title":"Polygon","description":"","frontmatter":{},"headers":[],"relativePath":"example/polygon.md","filePath":"example/polygon.md","lastUpdated":null}'),h={name:"example/polygon.md"};function p(k,s,o,d,r,E){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="polygon" tabindex="-1">Polygon <a class="header-anchor" href="#polygon" aria-label="Permalink to &quot;Polygon&quot;">â€‹</a></h1><div class="tip custom-block"><p class="custom-block-title">Note</p><p>All example files can be found at <code>assets/2d_nid</code> <a href="https://github.com/LandslideSIM/MaterialPointGenerator.jl" target="_blank" rel="noreferrer">https://github.com/LandslideSIM/MaterialPointGenerator.jl</a>.</p></div><p>First, we obtained the <code>.stl</code> and <code>.msh</code> files of the model through Gmsh. The <code>.msh</code> file is used to identify the partition information within the model.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MaterialPointGenerator</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">src_dir     </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> joinpath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@__DIR__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;assets/2d_nid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stl_file    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> joinpath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(src_dir , </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2d_nid.stl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">msh_file    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> joinpath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(src_dir , </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2d_nid.msh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nid_file    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> joinpath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(src_dir , </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2d_nid.nid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">output_file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> joinpath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(src_dir , </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;2d_nid.xy&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">polygon2particle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(stl_file, msh_file, output_file, nid_file, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, verbose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Note that this will generate two files, namely <code>.nid</code> and <code>.xy</code>. We can visualize this result to obtain the following outcome:</p><p><img src="`+e+'" alt=""></p><p>In this example, we have a total of three partitions. A partially enlarged image:</p><p><img src="'+l+'" alt=""></p>',8)]))}const y=i(h,[["render",p]]);export{c as __pageData,y as default};
